{"version":3,"sources":["logo.svg","actions/types.js","actions/postActions.js","components/Header.js","components/Posts.js","components/Favorites.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["FETCH_POSTS","NEW_POST","INCREASE_COUNTER","DECREASE_COUNTER","fetchPosts","dispatch","localStorage","getItem","setItem","JSON","stringify","pokemon","qqqqqq","zzzzzzzzzzzzz","parse","type","payload","createPost","postData","increase_counter","Header","props","counter","bind","count","this","posts","forEach","item","i","fav","className","to","data-notifications","href","Component","connect","state","items","Posts","Add","add","id","nextProps","postItems","map","post","src","img","width","name","english","base","Attack","Defense","onClick","newPost","Favorites","remove","remove_all","initialState","parseInt","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27c237bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const FETCH_POSTS = 'FETCH_POSTS';\nexport const NEW_POST = 'NEW_POST';\nexport const INCREASE_COUNTER  = 'INCREASE_COUNTER';\nexport const DECREASE_COUNTER  = 'DECREASE_COUNTER';\n \nexport const INCREMENT  = 'INCREMENT';\nexport const DECREMENT  = 'DECREMENT';\nexport const decrease_counter  = 'decrease_counter';\nexport const REMOVE  = 'REMOVE';\n// export const DECREMENT  = 'DECREMENT';","import { FETCH_POSTS, NEW_POST , INCREASE_COUNTER , DECREASE_COUNTER} from './types';\nimport pokemon from \"../pokemon\"; \n\nexport const fetchPosts = () => dispatch => {\n  if (!localStorage.getItem('pokemon') )  {  localStorage.setItem('pokemon',JSON.stringify(pokemon) );}\n   \nlet qqqqqq =   localStorage.getItem('pokemon');\n\n   let zzzzzzzzzzzzz =  JSON.parse(qqqqqq);\n      dispatch({\n        type: FETCH_POSTS,\n        payload:  zzzzzzzzzzzzz \n      })\n  \n};\n\nexport const createPost = postData => dispatch => {\n      dispatch({\n        type: NEW_POST,\n        payload: postData\n      })\n};\n\nexport const remove = postData => dispatch => {\n      dispatch({\n        type: NEW_POST,\n        payload: postData\n      })\n};\n  \n\nexport const  increase_counter= postData => dispatch => {\n      dispatch({\n        type: INCREASE_COUNTER,\n        payload:  postData++\n      })\n};\n\nexport const decrease_counter = postData => dispatch => {\n      dispatch({\n        type: DECREASE_COUNTER,\n        payload: postData--\n      })\n};\n ","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPosts , createPost ,increase_counter} from '../actions/postActions';\r\nimport {  Link} from \"react-router-dom\";\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.counter = this.counter.bind(this);\r\n  }\r\n \r\n counter (){\r\n  var count = 0;\r\n  this.props.posts.forEach((item, i) => {\r\n    if(item.fav == 1 ){\r\n      count++;\r\n    }\r\n  });\r\n return count ;\r\n }\r\n  \r\n\r\n \r\n\r\n  render() {\r\n \r\n    return (\r\n      <div className=\"header \">\r\n <Link to=\"/\">Pokemons</Link>\r\n\r\n \r\n          \r\n       \r\n<Link to=\"/Favorites\"> \r\n       <div className=\"float-right star_container\" >\r\n          <span className=\"fa fa-star star float-right\"></span>\r\n          <a data-notifications={JSON.stringify(  this.counter ())} className=\"button\" href=\"#\"></a>\r\n          </div>\r\n</Link> \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n \r\n\r\nconst mapStateToProps = state => ({\r\n  posts: state.posts.items,\r\n  counter: state.posts.counter\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchPosts  })(Header);\r\n ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts , createPost ,increase_counter} from '../actions/postActions';\nlet counter ;\nclass Posts extends Component {\n\n \n  constructor(props) {\n    super(props);\n    this.Add = this.Add.bind(this);\n     this.add = this.add.bind(this);\n  }\n\n add(id){\n  this.props.posts.forEach((item, i) => {\n    if(item.id == id ){\n        item.fav = 1 ;\n    }\n  });\n  this.props.increase_counter(this.props.counter);\n  localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n }\n  Add(id)\n  {\n    this.props.createPost(id);\n  }\n\n  componentWillMount()\n  {\n    this.props.fetchPosts();\n  }\n\n  increase_counter()\n  {\n    localStorage.setItem('counter',  this.props.counter );\n    localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (nextProps.newPost) {\n\n      // this.props.counter = this.props.counter +1 ;\n        // console.log(nextProps.newPost);\n    //     this.props.posts.forEach((item, i) => {\n    //       if(item.id == nextProps.newPost ){\n    //           item.fav = 1 ;\n    //           this.props.increase_counter(this.props.counter);\n    //           localStorage.setItem('counter',  this.props.counter+1 );\n    //           localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n    //       }\n    //     });\n    // }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}      className=\" pokemon_container col-lg-4  col-md-4  col-sm-6  col-xs-12 \"> \n          <div key={post.id}      className=\" pokemon  \">  \n          {/* <h3>{post.fav}</h3> */}\n          <img src= {post.img} width=\"100%\" />\n          <p className=\"name\"> {post.name.english}   </p>\n          <div className=\"d-flex justify-content-center \">\n            <div  className=\"attack \">Attack: {post.base.Attack} </div>\n            <div  className=\"defence \">Defence: {post.base.Defense} </div>\n          </div>\n\n\n\n          \n<div className=\"btn_fav_container\">\n{\npost.fav == 1 ?\n<div className = \" btn-block btn-added\">ADDED TO FAVORITES</div>\n\n: \n<button className = \"btn btn-primary btn-block btn-fav\"  onClick={() => this.add(post.id)}>ADD TO FAVORITES</button>\n\n}\n\n</div>         \n         \n          </div>\n      </div>\n    ));\n    return (\n      <div className=\"row\"> \n       {/* qqqq {JSON.stringify( this.props.counter)}\n       localStorage {parseInt(localStorage.getItem('counter'))} */}\n        {/* localStorage.getItem('pokemon')   {   localStorage.getItem('pokemon')    }  */}\n      \n         {postItems}\n      </div>\n    );\n  }\n}\n\n// Posts.propTypes = {\n//   fetchPosts: PropTypes.func.isRequired,\n//   posts: PropTypes.array.isRequired,\n//   // newPost: PropTypes.object\n// };\n\nconst mapStateToProps = state => ({\n        posts: state.posts.items,\n        newPost: state.posts.item,\n        counter: state.posts.counter\n});\n\nexport default connect(mapStateToProps, { fetchPosts ,createPost , increase_counter})(Posts);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts , createPost ,increase_counter} from '../actions/postActions';\nlet counter ;\nclass Favorites extends Component {\n\n \n  constructor(props) {\n    super(props);\n    this.Add = this.Add.bind(this);\n    this.remove = this.remove.bind(this);\n    this.remove_all = this.remove_all.bind(this);\n  }\n\n  counter (){\n    var count = 0;\n    this.props.posts.forEach((item, i) => {\n      if(item.fav == 1 ){\n        count++;\n      }\n    });\n   return count ;\n   }\n\n\n  Add(id)\n  {\n    this.props.createPost(id);\n  }\n\n    remove(id)\n  {\n    this.props.posts.forEach((item, i) => {\n      if(item.id == id ){\n          item.fav = 0 ;\n      }\n    });\n    this.props.increase_counter(this.props.counter);\n    localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n  }\n\n  remove_all()\n  {\n    this.props.posts.forEach((item, i) => {\n     \n          item.fav = 0 ;\n     \n    });\n    this.props.increase_counter(this.props.counter);\n    localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n  }\n  \n\n  componentWillMount()\n  {\n    this.props.fetchPosts();\n  }\n\n  increase_counter()\n  {\n    // localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // if (nextProps.newPost) {\n\n    //   // this.props.counter = this.props.counter +1 ;\n    //       console.log('nextProps.newPostnextProps.newPostnextProps.newPost',nextProps.newPost.id);\n    //     this.props.posts.forEach((item, i) => {\n    //       if(item.id == nextProps.newPost ){\n    //           item.fav = 0 ;\n    //           this.props.increase_counter(this.props.counter);\n    //           localStorage.setItem('counter',  this.props.counter+1 );\n    //           localStorage.setItem('pokemon',JSON.stringify(this.props.posts ) );\n    //       }\n    //     });\n    // }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n       post.fav == 1 ?\n      <div key={post.id}      className=\"pokemon_fav  col-md-12 \"> \n        <img src= {post.img} width=\"80\" />\n        <span className=\"fav_name\"> {post.name.english}   </span>\n        <button className = \"btn btn-primary  float-right btn-remove\"  onClick={() => this.remove(post.id)}>REMOVE</button>\n      </div>      \n      : null \n    ));\n\n    return (\n      <div className=\"row \"> \n         {postItems}\n         <div className=\" d-flex justify-content-center  w-100\">\n  \n\n       {   this.counter () == 0 ?\n                 <div className = \"btn btn-primary   btn_remove_all\"   >You Have No Favorites</div>\n\n      : \n                  <button className = \"btn btn-primary    btn_remove_all\"  onClick={() => this.remove_all()} >REMOVE ALL</button>\n\n      }\n        </div>\n      </div>\n    );\n  }\n}\n\n// Posts.propTypes = {\n//   fetchPosts: PropTypes.func.isRequired,\n//   posts: PropTypes.array.isRequired,\n//   // newPost: PropTypes.object\n// };\n\nconst mapStateToProps = state => ({\n        posts: state.posts.items,\n        newPost: state.posts.item,\n        counter: state.posts.counter\n});\n\nexport default connect(mapStateToProps, { fetchPosts ,createPost , increase_counter})(Favorites);\n","import { FETCH_POSTS, NEW_POST , INCREASE_COUNTER , DECREASE_COUNTER} from '../actions/types';\n \n   if (!localStorage.getItem('counter') )  {   localStorage.setItem('counter',0);}\n\nconst initialState = {\n  items: [],\n  item: {},\n  counter :parseInt(localStorage.getItem('counter')) \n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return {\n        ...state,\n        items: action.payload\n      };\n    case NEW_POST:\n      return {\n        ...state,\n        item: action.payload\n      };\n\n      case INCREASE_COUNTER:\n        return {\n          ...state,\n          counter: action.payload+1\n          \n        };      \n      case DECREASE_COUNTER:\n        return {\n          ...state,\n          counter: action.payload\n        };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n  posts: postReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Provider } from 'react-redux';\n\nimport Header from './components/Header';\nimport Posts from './components/Posts';\nimport Favorites from './components/Favorites';\nimport store from './store';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        \n\n \n\n\n\n        <Router>\n        <Header />\n      <div className=\" container\">\n \n\n        <Switch>\n          <Route path=\"/Favorites\">\n            <Favorites />\n          </Route>\n          <Route path=\"/\">\n          <Posts />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n\n\n\n\n\n\n\n\n\n      \n \n   \n          \n         \n      </Provider>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}